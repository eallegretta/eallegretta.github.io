window.paletools = { "paleavion": "KGZ1bmN0aW9uICgpIHsNCiAgICBpZiAod2luZG93Ll9fcGFsZWF2aW9uKSByZXR1cm47DQoNCiAgICB3aW5kb3cuXzB4MWMxODg3ID0gZnVuY3Rpb24oKXt9DQoNCiAgICBjb25zdCB2ZXIgPSAidjEuMCI7DQogICAgZG9jdW1lbnQuYm9keS5vbmtleXByZXNzID0gZSA9PiB7DQogICAgICAgIGlmIChlLmtleSA9PT0gJ3QnIHx8IGUua2V5ID09PSAnVCcpIHsNCiAgICAgICAgICAgIHZhciBjdXJyZW50VmFsdWUgPSBwYXJzZUludCgkKCcuRGV0YWlsUGFuZWwgLmF1Y3Rpb25JbmZvIC5jb2lucycpLnRleHQoKS5yZXBsYWNlKCcsJywgJycpLnJlcGxhY2UoJy4nLCcnKSk7DQogICAgICAgICAgICBpZiAoIWN1cnJlbnRWYWx1ZSkgcmV0dXJuOw0KICAgICAgICAgICAgdmFyIHRlY2hBdmlvbiA9IGN1cnJlbnRWYWx1ZSArICgoTWF0aC5mbG9vcihjdXJyZW50VmFsdWUgLyAxMDAwMCkgLSAxKSAqIDEwMDApICsgMzUwMDsNCiAgICAgICAgICAgIGlmICgkKCcuRGV0YWlsUGFuZWwgLnRlY2hBdmlvbicpLmxlbmd0aCA+IDApIHJldHVybjsNCiAgICAgICAgICAgICQoJy5EZXRhaWxQYW5lbCAuYXVjdGlvbkluZm8nKS5hcHBlbmQoJzxkaXYgY2xhc3M9XCdjb2x1bW5cJz48c3BhbiBjbGFzcz1cJ3NlY29uZGFyeSBzdWJIZWFkaW5nIHRlY2hBdmlvblwnPlRlY2ggQXZpb248L3NwYW4+PHNwYW4gY2xhc3M9XCdjb2lucyBzdWJDb250ZW50XCc+JyArIHRlY2hBdmlvbiArICc8L3NwYW4+PC9kaXY+Jyk7DQogICAgICAgIH0NCiAgICB9Ow0KDQogICAgJCgibmF2LnV0LXRhYi1iYXIiKS5hcHBlbmQoJzxidXR0b24gY2xhc3M9InV0LXRhYi1iYXItaXRlbSIgc3R5bGU9Im9yZGVyOiA2Ij48YSBzdHlsZT0idGV4dC1kZWNvcmF0aW9uOm5vbmU7Y29sb3I6aW5oZXJpdCIgdGFyZ2V0PSJwYWxldG9vbHMiIGhyZWY9Imh0dHA6Ly9lYWxsZWdyZXR0YS5naXRodWIuaW8vcGFsZXRvb2xzLmh0bWwiPlBhbGVhdmlvbiAnICsgdmVyICsgJzwvYT4nKTsNCiAgICB3aW5kb3cuX19wYWxlYXZpb24gPSB0cnVlOw0KfSkoKTs=",
"palefilter": "KGZ1bmN0aW9uICgpIHsNCiAgICBpZiAod2luZG93Ll9fcGFsZWZpbHRlcikgcmV0dXJuOw0KDQogICAgd2luZG93Ll8weDFjMTg4NyA9IGZ1bmN0aW9uKCl7fQ0KDQogICAgY29uc3QgdmVyID0gInYxLjIiOw0KICAgIGNvbnN0DQogICAgICAgIGxvY2FsZVBsYXllcnMgPSB3aW5kb3cuc2VydmljZXMuTG9jYWxpemF0aW9uLmxvY2FsaXplKCdzZWFyY2guZmlsdGVycy5wbGF5ZXJzJyksDQogICAgICAgIGxvY2FsZVNxdWFkRml0bmVzcyA9IHdpbmRvdy5zZXJ2aWNlcy5Mb2NhbGl6YXRpb24ubG9jYWxpemUoJ2NhcmQudGl0bGUuc3F1YWRmaXRuZXNzJyksDQogICAgICAgIGRpc3BhdGNoTW91c2VFdmVudCA9ICgkdGFyZ2V0LCBldmVudE5hbWUpID0+IHsNCiAgICAgICAgICAgIGlmICgkdGFyZ2V0Lmxlbmd0aCA9PSAwKSByZXR1cm47DQogICAgICAgICAgICBjb25zdCBtb3VzZUV2ZW50ID0gZG9jdW1lbnQuY3JlYXRlRXZlbnQoJ01vdXNlRXZlbnRzJyk7DQogICAgICAgICAgICBtb3VzZUV2ZW50LmluaXRFdmVudChldmVudE5hbWUpOw0KICAgICAgICAgICAgJHRhcmdldFswXS5kaXNwYXRjaEV2ZW50KG1vdXNlRXZlbnQpDQogICAgICAgIH0sDQogICAgICAgIG1vdXNlRG93biA9IHRhcmdldCA9PiBkaXNwYXRjaE1vdXNlRXZlbnQodGFyZ2V0LCAnbW91c2Vkb3duJyksDQogICAgICAgIG1vdXNlVXAgPSB0YXJnZXQgPT4gZGlzcGF0Y2hNb3VzZUV2ZW50KHRhcmdldCwgJ21vdXNldXAnKSwNCiAgICAgICAgbW91c2VDbGljayA9IHRhcmdldCA9PiB7DQogICAgICAgICAgICBtb3VzZURvd24odGFyZ2V0KTsNCiAgICAgICAgICAgIG1vdXNlVXAodGFyZ2V0KTsNCiAgICAgICAgfSwNCiAgICAgICAgZ2V0UGxheWVyU3RhdCA9ICh0LCBlKSA9PiAkKCcucGxheWVyLXN0YXRzLWRhdGEtY29tcG9uZW50IC52YWx1ZScsIHQpW2VdLnRleHRDb250ZW50LA0KICAgICAgICBwbGF5ZXJBdHRycyA9IHsNCiAgICAgICAgICAgIG92cjogdCA9PiAkKCcucmF0aW5nJywgdClbMF0udGV4dENvbnRlbnQsDQogICAgICAgICAgICBwYWM6IHQgPT4gZ2V0UGxheWVyU3RhdCh0LCAwKSwNCiAgICAgICAgICAgIHNobzogdCA9PiBnZXRQbGF5ZXJTdGF0KHQsIDEpLA0KICAgICAgICAgICAgcGFzOiB0ID0+IGdldFBsYXllclN0YXQodCwgMiksDQogICAgICAgICAgICBkcmk6IHQgPT4gZ2V0UGxheWVyU3RhdCh0LCAzKSwNCiAgICAgICAgICAgIGRlZjogdCA9PiBnZXRQbGF5ZXJTdGF0KHQsIDQpLA0KICAgICAgICAgICAgcGh5OiB0ID0+IGdldFBsYXllclN0YXQodCwgNSkNCiAgICAgICAgfSwNCiAgICAgICAgZ2V0U3F1YWRGaXRuZXNzID0gKHQpID0+ICQoJy5uYW1lOmNvbnRhaW5zKCcgKyBsb2NhbGVTcXVhZEZpdG5lc3MgKyAnKScsIHQpLmxlbmd0aCA+IDAgPyAkKCcuc3VidHlwZScsIHQpWzBdLnRleHRDb250ZW50IDogbnVsbCwNCiAgICAgICAgaGVhZGVyID0gJCgiLnV0LWZpZmEtaGVhZGVyLXZpZXciKTsNCg0KICAgIGxldCBzZWxlY3RlZEZpbHRlciA9ICdwbGF5ZXInOw0KICAgICQoIjxzZWxlY3Qgc3R5bGU9J2hlaWdodDo0NnB4Jz48b3B0aW9uIHZhbHVlPSdwbGF5ZXInPiIgKyBsb2NhbGVQbGF5ZXJzICsgIjwvb3B0aW9uPjxvcHRpb24gdmFsdWU9J2ZpdG5lc3MnPiIgKyBsb2NhbGVTcXVhZEZpdG5lc3MgKyAiPC9vcHRpb24+PC9zZWxlY3Q+IikuY2hhbmdlKGZ1bmN0aW9uICgpIHsNCiAgICAgICAgc2VsZWN0ZWRGaWx0ZXIgPSB0aGlzLnZhbHVlOw0KICAgICAgICBpZiAodGhpcy52YWx1ZSA9PSAncGxheWVyJykgew0KICAgICAgICAgICAgcGxheWVyQXR0cnNDb250YWluZXIuc2hvdygpOw0KICAgICAgICAgICAgc3F1YWRGaXRuZXNzQ29udGFpbmVyLmhpZGUoKTsNCiAgICAgICAgfQ0KICAgICAgICBlbHNlIHsNCiAgICAgICAgICAgIHBsYXllckF0dHJzQ29udGFpbmVyLmhpZGUoKTsNCiAgICAgICAgICAgIHNxdWFkRml0bmVzc0NvbnRhaW5lci5zaG93KCk7DQogICAgICAgIH0NCiAgICB9KS5hcHBlbmRUbyhoZWFkZXIpOw0KDQogICAgbGV0IHBsYXllckF0dHJzQ29udGFpbmVyID0gJCgiPGRpdiAvPiIpLmNzcygiZGlzcGxheSIsICJpbmxpbmUtYmxvY2siKS5hcHBlbmRUbyhoZWFkZXIpOw0KICAgIGZvciAodmFyIHBsYXllckF0dHIgaW4gcGxheWVyQXR0cnMpIHsNCiAgICAgICAgJCgnPGlucHV0IC8+JykuYXR0cignaWQnLCAnXycgKyBwbGF5ZXJBdHRyKS5hdHRyKCd0eXBlJywgJ3RleHQnKS5hdHRyKCdzdHlsZScsICd3aWR0aDo1MnB4JykuYWRkQ2xhc3MoJ3BsYXllcmF0dHInKS5hdHRyKCdwbGFjZWhvbGRlcicsIHBsYXllckF0dHIudG9VcHBlckNhc2UoKSkuYXBwZW5kVG8ocGxheWVyQXR0cnNDb250YWluZXIpOw0KICAgIH0NCg0KICAgIGxldCBzcXVhZEZpdG5lc3NDb250YWluZXIgPSAkKCI8c2VsZWN0IGlkPSdzcXVhZEZpdG5lc3MnIHN0eWxlPSdoZWlnaHQ6NDZweCc+PG9wdGlvbiB2YWx1ZT0nKzMwJz4rMzA8L29wdGlvbj48b3B0aW9uIHZhbHVlPScrMjAnPisyMDwvb3B0aW9uPjxvcHRpb24gdmFsdWU9JysxMCc+KzEwPC9vcHRpb24+PC9zZWxlY3Q+IikuYXBwZW5kVG8oaGVhZGVyKS5oaWRlKCk7DQoNCiAgICAkKCcudmlldy1yb290Jykub24oJ0RPTVN1YnRyZWVNb2RpZmllZCcsIGZ1bmN0aW9uIChlbGVtKSB7DQogICAgICAgIGxldCBpdGVtcyA9ICQoJy5saXN0RlVUSXRlbScsIGVsZW0udGFyZ2V0KTsNCiAgICAgICAgbGV0IHNlbGVjdGVkU3F1YWRGaXRuZXNzID0gJCgiI3NxdWFkRml0bmVzcyIpLnZhbCgpOw0KICAgICAgICBpdGVtcy5lYWNoKGZ1bmN0aW9uICgpIHsNCiAgICAgICAgICAgIGlmIChzZWxlY3RlZEZpbHRlciA9PT0gJ3BsYXllcicpIHsNCiAgICAgICAgICAgICAgICBmb3IgKHZhciBwbGF5ZXJBdHRyIGluIHBsYXllckF0dHJzKSB7DQogICAgICAgICAgICAgICAgICAgIHZhciBhdHRyVmFsdWUgPSAkKCcjXycgKyBwbGF5ZXJBdHRyKS52YWwoKTsNCiAgICAgICAgICAgICAgICAgICAgaWYgKGF0dHJWYWx1ZSAmJiBwbGF5ZXJBdHRyc1twbGF5ZXJBdHRyXSh0aGlzKSAhPSBhdHRyVmFsdWUpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICQodGhpcykucmVtb3ZlKCk7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQogICAgICAgICAgICBlbHNlIGlmIChzZWxlY3RlZEZpbHRlciA9PT0gJ2ZpdG5lc3MnKSB7DQogICAgICAgICAgICAgICAgaWYgKGdldFNxdWFkRml0bmVzcyh0aGlzKSAhPSBzZWxlY3RlZFNxdWFkRml0bmVzcykgew0KICAgICAgICAgICAgICAgICAgICAkKHRoaXMpLnJlbW92ZSgpOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCg0KICAgICAgICB9KTsNCg0KICAgICAgICBpdGVtcyA9ICQoJy5saXN0RlVUSXRlbScsIGVsZW0udGFyZ2V0KTsNCiAgICAgICAgaWYgKGl0ZW1zLmxlbmd0aCA+IDApIHsNCiAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgew0KICAgICAgICAgICAgICAgIG1vdXNlQ2xpY2soaXRlbXMpOw0KICAgICAgICAgICAgfSwgMCk7DQogICAgICAgIH0NCg0KICAgIH0pOw0KDQogICAgJCgibmF2LnV0LXRhYi1iYXIiKS5hcHBlbmQoJzxidXR0b24gY2xhc3M9InV0LXRhYi1iYXItaXRlbSIgc3R5bGU9Im9yZGVyOiA2Ij48YSBzdHlsZT0idGV4dC1kZWNvcmF0aW9uOm5vbmU7Y29sb3I6aW5oZXJpdCIgdGFyZ2V0PSJwYWxldG9vbHMiIGhyZWY9Imh0dHA6Ly9lYWxsZWdyZXR0YS5naXRodWIuaW8vcGFsZXRvb2xzLmh0bWwiPlBhbGVmaWx0ZXIgJyArIHZlciArICc8L2E+Jyk7DQogICAgd2luZG93Ll9fcGFsZWZpbHRlciA9IHRydWU7DQp9KSgpOw==",
"palesnipe": "KGZ1bmN0aW9uKGRlY3JlbWVudE1pbkJpZEtleSwgDQogICAgaW5jcmVtZW50TWluQmluS2V5LCANCiAgICBkZWNyZW1lbnRNYXhCdXlOb3dLZXksIA0KICAgIGluY3JlbWVudE1heEJ1eU5vd0tleSwgDQogICAgYmFja0J1dHRvbktleSwgDQogICAgc2VhcmNoQnV0dG9uS2V5LCANCiAgICBidXlOb3dCdXR0b25LZXksIA0KICAgIHNlbmRUb1RyYW5zZmVyTGlzdEJ1dHRvbktleSwNCiAgICBzZW5kVG9DbHViQnV0dG9uS2V5KSB7DQogICAgY29uc3QgdmVyID0gInYxLjEiOw0KICAgIA0KICAgIGlmKHdpbmRvdy5fX3BhbGVzbmlwZSkgcmV0dXJuOw0KICAgIA0KICAgIHdpbmRvdy5fMHgxYzE4ODcgPSBmdW5jdGlvbigpe30NCg0KICAgIGNvbnN0IA0KICAgICAgICBkaXNwYXRjaE1vdXNlRXZlbnQgPSAoJHRhcmdldCwgZXZlbnROYW1lKSA9PiB7DQogICAgICAgICAgICBpZigkdGFyZ2V0Lmxlbmd0aCA9PSAwKSByZXR1cm47DQogICAgICAgICAgICBjb25zdCBtb3VzZUV2ZW50ID0gZG9jdW1lbnQuY3JlYXRlRXZlbnQoJ01vdXNlRXZlbnRzJyk7DQogICAgICAgICAgICBtb3VzZUV2ZW50LmluaXRFdmVudChldmVudE5hbWUpOw0KICAgICAgICAgICAgJHRhcmdldFswXS5kaXNwYXRjaEV2ZW50KG1vdXNlRXZlbnQpDQogICAgICAgIH0sDQogICAgICAgIG1vdXNlRG93biA9IHRhcmdldCA9PiBkaXNwYXRjaE1vdXNlRXZlbnQodGFyZ2V0LCAnbW91c2Vkb3duJyksDQogICAgICAgIG1vdXNlVXAgPSB0YXJnZXQgPT4gZGlzcGF0Y2hNb3VzZUV2ZW50KHRhcmdldCwgJ21vdXNldXAnKSwNCiAgICAgICAgbW91c2VDbGljayA9IHRhcmdldCA9PiB7IA0KICAgICAgICAgICAgbW91c2VEb3duKHRhcmdldCk7DQogICAgICAgICAgICBtb3VzZVVwKHRhcmdldCk7DQogICAgICAgIH0sDQogICAgICAgIGtleXMgPSB7DQogICAgICAgICAgICBbZGVjcmVtZW50TWluQmlkS2V5XTogKCkgPT4gbW91c2VDbGljaygkKCcuZGVjcmVtZW50LXZhbHVlJykpLA0KICAgICAgICAgICAgW2luY3JlbWVudE1pbkJpbktleV06ICgpID0+IG1vdXNlQ2xpY2soJCgnLmluY3JlbWVudC12YWx1ZScpKSwNCiAgICAgICAgICAgIFtkZWNyZW1lbnRNYXhCdXlOb3dLZXldOiAoKSA9PiBtb3VzZUNsaWNrKCQoJy5kZWNyZW1lbnQtdmFsdWU6ZXEoMyknKSksDQogICAgICAgICAgICBbaW5jcmVtZW50TWF4QnV5Tm93S2V5XTogKCkgPT4gbW91c2VDbGljaygkKCcuaW5jcmVtZW50LXZhbHVlOmVxKDMpJykpLA0KICAgICAgICAgICAgW2JhY2tCdXR0b25LZXldOiAoKSA9PiBtb3VzZUNsaWNrKCQoJy51dC1uYXZpZ2F0aW9uLWJ1dHRvbi1jb250cm9sJykpLA0KICAgICAgICAgICAgW3NlYXJjaEJ1dHRvbktleV06ICgpID0+IG1vdXNlQ2xpY2soJCgnLmJ1dHRvbi1jb250YWluZXIgLmJ0bi1zdGFuZGFyZC5jYWxsLXRvLWFjdGlvbicpKSwNCiAgICAgICAgICAgIFtidXlOb3dCdXR0b25LZXldOiAoKSA9PiBtb3VzZUNsaWNrKCQoJy5idXlCdXR0b24nKSksDQogICAgICAgICAgICBbc2VuZFRvVHJhbnNmZXJMaXN0QnV0dG9uS2V5XTogKCkgPT4gbW91c2VDbGljaygkKCIudXQtYnV0dG9uLWdyb3VwID4gYnV0dG9uOmNvbnRhaW5zKCciICsgd2luZG93LnNlcnZpY2VzLkxvY2FsaXphdGlvbi5sb2NhbGl6ZSgnaW5mb3BhbmVsLmxhYmVsLnNlbmRUcmFkZVBpbGUnKSArICInKSIpKSwNCiAgICAgICAgICAgIFtzZW5kVG9DbHViQnV0dG9uS2V5XTogKCkgPT4gbW91c2VDbGljaygkKCIudXQtYnV0dG9uLWdyb3VwID4gYnV0dG9uOmNvbnRhaW5zKCciICsgIHdpbmRvdy5zZXJ2aWNlcy5Mb2NhbGl6YXRpb24ubG9jYWxpemUoJ2luZm9wYW5lbC5sYWJlbC5zdG9yZUluQ2x1YicpICsgIicpIikpDQogICAgICAgIH07DQoNCiAgICBjb25zb2xlLmxvZyhrZXlzKTsNCg0KICAgIGRvY3VtZW50LmJvZHkub25rZXlkb3duID0gZSA9PiB7DQogICAgICAgIGlmKCFrZXlzLmhhc093blByb3BlcnR5KGUua2V5Q29kZSkpIHJldHVybjsNCiAgICAgICAga2V5c1tlLmtleUNvZGVdKCk7DQogICAgfTsNCg0KICAgICQoIm5hdi51dC10YWItYmFyIikuYXBwZW5kKCc8YnV0dG9uIGNsYXNzPSJ1dC10YWItYmFyLWl0ZW0iIHN0eWxlPSJvcmRlcjogNiI+PGEgc3R5bGU9InRleHQtZGVjb3JhdGlvbjpub25lO2NvbG9yOmluaGVyaXQiIHRhcmdldD0icGFsZXRvb2xzIiBocmVmPSJodHRwOi8vZWFsbGVncmV0dGEuZ2l0aHViLmlvL3BhbGV0b29scy5odG1sIj5QYWxlc25pcGUgJyArIHZlciArICc8L2E+Jyk7DQogICAgd2luZG93Ll9fcGFsZXNuaXBlID0gdHJ1ZTsNCn0pKDM3LDM5LDQwLDM4LDQ5LDUwLDUxLDUyLDUzKTsNCg==", };
