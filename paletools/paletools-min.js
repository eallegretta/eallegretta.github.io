window.paletools = window.paletools || {};
window.paletools['paletools-min'] = "!function(e){const t=["","","","CANCEL","","","HELP","","BACK_SPACE","TAB","","","CLEAR","ENTER","ENTER_SPECIAL","","SHIFT","CONTROL","ALT","PAUSE","CAPS_LOCK","KANA","EISU","JUNJA","FINAL","HANJA","","ESCAPE","CONVERT","NONCONVERT","ACCEPT","MODECHANGE","SPACE","PAGE_UP","PAGE_DOWN","END","HOME","LEFT","UP","RIGHT","DOWN","SELECT","PRINT","EXECUTE","PRINTSCREEN","INSERT","DELETE","","0","1","2","3","4","5","6","7","8","9","COLON","SEMICOLON","LESS_THAN","EQUALS","GREATER_THAN","QUESTION_MARK","AT","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","OS_KEY","","CONTEXT_MENU","","SLEEP","NUMPAD0","NUMPAD1","NUMPAD2","NUMPAD3","NUMPAD4","NUMPAD5","NUMPAD6","NUMPAD7","NUMPAD8","NUMPAD9","MULTIPLY","ADD","SEPARATOR","SUBTRACT","DECIMAL","DIVIDE","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","F12","F13","F14","F15","F16","F17","F18","F19","F20","F21","F22","F23","F24","","","","","","","","","NUM_LOCK","SCROLL_LOCK","WIN_OEM_FJ_JISHO","WIN_OEM_FJ_MASSHOU","WIN_OEM_FJ_TOUROKU","WIN_OEM_FJ_LOYA","WIN_OEM_FJ_ROYA","","","","","","","","","","CIRCUMFLEX","EXCLAMATION","DOUBLE_QUOTE","HASH","DOLLAR","PERCENT","AMPERSAND","UNDERSCORE","OPEN_PAREN","CLOSE_PAREN","ASTERISK","PLUS","PIPE","HYPHEN_MINUS","OPEN_CURLY_BRACKET","CLOSE_CURLY_BRACKET","TILDE","","","","","VOLUME_MUTE","VOLUME_DOWN","VOLUME_UP","","","SEMICOLON","EQUALS","COMMA","MINUS","PERIOD","SLASH","BACK_QUOTE","","","","","","","","","","","","","","","","","","","","","","","","","","","OPEN_BRACKET","BACK_SLASH","CLOSE_BRACKET","QUOTE","","META","ALTGR","","WIN_ICO_HELP","WIN_ICO_00","","WIN_ICO_CLEAR","","","WIN_OEM_RESET","WIN_OEM_JUMP","WIN_OEM_PA1","WIN_OEM_PA2","WIN_OEM_PA3","WIN_OEM_WSCTRL","WIN_OEM_CUSEL","WIN_OEM_ATTN","WIN_OEM_FINISH","WIN_OEM_COPY","WIN_OEM_AUTO","WIN_OEM_ENLW","WIN_OEM_BACKTAB","ATTN","CRSEL","EXSEL","EREOF","PLAY","ZOOM","","PA1","WIN_OEM_CLEAR",""];let n=!0,o=new Date,a=null,i=null;e=$.extend({back:49,enableDisable:92,tech:84,lists:{up:38,down:40,prev:37,next:39},search:{decMinBid:37,incMinBid:39,decMaxBid:35,incMaxBid:36,decMinBuy:46,incMinBuy:34,decMaxBuy:40,incMaxBuy:38,search:50},results:{bid:52,buy:51,transfer:82,club:67,pressEnter:!0,autoBuy:!1,sell:81,decBid:46,incBid:34}},e||{});const l=window.MutationObserver||window.WebKitMutationObserver,s=e,r=window.services.Localization,A=window.services.Localization.localize("search.filters.players"),c=window.services.Localization.localize("card.title.squadfitness"),p=window.services.Localization.localize("card.title.contract"),u=(e,t)=>{let n=new l(function(e,n){(e[0].addedNodes.length||e[0].removedNodes.length)&&t()});return n.observe(e,{childList:!0}),n},d=(e,t)=>{if(0==e.length)return!1;const n=document.createEvent("MouseEvents");return n.initEvent(t),e[0].dispatchEvent(n),!0},E=e=>(e=>d(e,"mousedown"))(e)&&(e=>d(e,"mouseup"))(e),b=(e,t)=>$(".player-stats-data-component .value",e)[t].textContent,h={ovr:e=>$(".rating",e)[0].textContent,pac:e=>b(e,0),sho:e=>b(e,1),pas:e=>b(e,2),dri:e=>b(e,3),def:e=>b(e,4),phy:e=>b(e,5)},N=$(".ut-fifa-header-view"),v=e=>{let t=$(".listFUTItem",e);if(0==t.length)return;let n=$("#squadFitness").val(),o=$("#contracts").val();t.each((e,t)=>{let a=$(t);if(a.attr("pale-id",e),"player"===L)if(0==(e=>$($("#card-type").val(),e).length)(t))a.remove();else for(var i in h){var l=$(`#_${i}`).val();if(l&&h[i](t)!=l){a.remove();break}}else("fitness"===L&&(e=>$(`.name:contains(${c})`,e).length>0?$(".subtype",e)[0].textContent:null)(t)!=n||"contracts"===L&&(e=>$(".contracts",e).hasClass("rare")?"rare":"common")(t)!=o)&&a.remove()}),(t=$(".listFUTItem",e)).length>0&&setTimeout(function(){E(t)},0)},M=()=>{let e=$(".dialog-body .ut-button-group button:eq(0)");E(e)?g():setTimeout(M,10)},m=()=>{let e=$(".paginated");0!=e.length&&(i&&i.disconnect(),v(e),a&&a.disconnect(),a=u(e[0],()=>{v(e)}))},O=()=>{new Date-o<500||(o=new Date,E($(".ut-navigation-button-control"))||setTimeout(O,10))},T=()=>$(`.ut-button-group > button:contains('${r.localize("infopanel.label.sendTradePile")}')`),C=()=>$(`.ut-button-group > button:contains('${r.localize("infopanel.label.storeInClub")}')`),I=()=>$(`.ut-button-group > button:contains('${r.localize("infopanel.label.discard")}')`),B=()=>{try{let e={};if($(".ut-market-search-filters-view").length>0)e[s.search.decMinBid]=(()=>E($(".decrement-value"))),e[s.search.incMinBid]=(()=>E($(".increment-value"))),e[s.search.decMaxBid]=(()=>E($(".decrement-value:eq(1)"))),e[s.search.incMaxBid]=(()=>E($(".increment-value:eq(1)"))),e[s.search.decMinBuy]=(()=>E($(".decrement-value:eq(2)"))),e[s.search.incMinBuy]=(()=>E($(".increment-value:eq(2)"))),e[s.search.decMaxBuy]=(()=>E($(".decrement-value:eq(3)"))),e[s.search.incMaxBuy]=(()=>E($(".increment-value:eq(3)"))),e[s.search.search]=(()=>(()=>{E($(".button-container .btn-standard.call-to-action"));let e=$(".ut-navigation-container-view--content");i=u(e[0],()=>{m()}),m()})());else{let t=$(".listFUTItem"),n=t.length>0,o=t.parents(".paginated, .ut-watch-list-view, .ut-transfer-list-view");0==o.length&&(o=t.parent()),n&&$(".DetailPanel > .bidOptions").length>0&&(e[s.results.bid]=(()=>E($(".bidButton"))),e[s.results.buy]=(()=>void(E($(".buyButton"))&&s.results.pressEnter&&M())),e[s.results.decBid]=(()=>E($(".bidOptions .decrement-value"))),e[s.results.incBid]=(()=>E($(".bidOptions .increment-value")))),n&&$(".DetailPanel > .ut-button-group").length>0&&(e[s.results.transfer]=(()=>E(T())),e[s.results.club]=(()=>E(C())),e[s.results.sell]=(()=>E(I()))),n&&(e[s.lists.up]=(()=>{let e=o,t=$(".listFUTItem.selected",e).prev();E(t),e.css("position","relative"),e.scrollTop(e.scrollTop()+t.position().top-t.height())}),e[s.lists.down]=(()=>{let e=o,t=$(".listFUTItem.selected",e).next();E(t),e.css("position","relative"),e.scrollTop(e.scrollTop()+t.position().top)})),$(".pagingContainer").length>0&&(e[s.lists.prev]=(()=>E($(".pagingContainer .prev:visible"))),e[s.lists.next]=(()=>E($(".pagingContainer .next:visible"))))}return e}catch(e){P(e)}},g=()=>{var e=T();if(0==e.length)return void setTimeout(g,50);let n=(e,n)=>{if(!e)return;let o=` [ ${t[s.results[n]]} ]`,a=e.html();a&&-1==a.indexOf(o)&&e.html(e.html()+o)};n(e,"transfer"),n(C(),"club"),n(I(),"sell")},P=e=>{$("#log").val(`${new Date}: ${e}\n${$("#log").val()}`)};let L="player";$(`<select style="height:46px"><option value="player">${A}</option><option value="fitness">${c}</option><option value="contracts">${p}</option></select>`).change(function(){L=this.value,R.hide(),U.hide(),F.hide(),"player"==this.value?R.show():"fitness"===this.value?U.show():"contracts"===this.value&&F.show()}).appendTo(N);let R=$("<div />").css("display","inline-block").appendTo(N);for(var S in h)$("<input />").attr("id",`_${S}`).attr("type","text").attr("style","width:52px").addClass("playerattr").attr("placeholder",S.toUpperCase()).appendTo(R);$('<select id="card-type" style="height:46px">\n            <option value=".item"></option>\n            <option value=".common:not(.champions)">Common</option>\n            <option value=".rare:not(.champions)">Rare</options>\n            <option value=".common.champions">UCL Common</option>\n            <option value=".rare.champions">UCL Rare</option>\n            <option value=\'.specials .playerOverview[style="color: rgb(255, 226, 140);"]\'>Gold IF</option>\n            <option value=\'.specials .playerOverview[style="color: rgb(242, 242, 243);"]\'>Silver IF</option>\n            <option value=\'.specials .playerOverview[style="color: rgb(252, 84, 97);"]\'>OTW</option>\n        </select>\n    ').appendTo(R);let U=$('<select id="squadFitness" style="height:46px"><option value="+30">+30</option><option value="+20">+20</option><option value="+10">+10</option></select>').appendTo(N).hide(),F=$('<select id="contracts" style="height:46px"><option value="rare">Rare</option><option value="common">Common</option></select>').appendTo(N).hide();(()=>{let e=(e,n,o,a)=>`${e} .${a?"in":"de"}crement-value:after { font-size:10px; display:block; margin-top:-30px; content: '[ ${t[s[n][o]]} ]' }`,n=(t,n,o)=>e(`.search-prices .price-filter:nth-child(${t})`,"search",n,o),o=(e,t,o)=>`${n(e,t)}${n(e,o,!0)}`,a=`\n            ${o(2,"decMinBid","incMinBid")}\n            ${o(3,"decMaxBid","incMaxBid")}\n            ${o(5,"decMinBuy","incMinBuy")}\n            ${o(6,"decMaxBuy","incMaxBuy")}\n            ${e(".DetailPanel > .bidOptions","results","decBid",!1)}\n            ${e(".DetailPanel > .bidOptions","results","incBid",!0)}\n            .ut-market-search-filters-view .call-to-action:after { content: '[ ${t[s.search.search]} ]' }\n            .ut-navigation-button-control:after { font-size:10px; float:right; margin-right:12px; content: '[ ${t[s.back]} ]' }\n            .pagingContainer .prev:after { font-size: 10px; display:block; content: '[ ${t[s.lists.prev]} ]' }\n            .pagingContainer .next:after { font-size: 10px; display:block; content: '[ ${t[s.lists.next]} ]' }\n            .bidButton:after { content: ' [ ${t[s.results.bid]} ]' }\n            .buyButton:before { float:right; margin-left: -40px; content: ' [ ${t[s.results.buy]} ]' }\n            button.ut-tab-bar-item.icon-home { order: 0 }\n            button.ut-tab-bar-item.icon-squad { order: 0 }\n            button.ut-tab-bar-item.icon-sbc { order: 1 }\n            button.ut-tab-bar-item.icon-transfer { order: 2 }\n            button.ut-tab-bar-item.icon-store { order: 2 }\n            button.ut-tab-bar-item.icon-club { order: 2 }\n            `;var i=document.createElement("style");i.type="text/css",i.innerText=a,document.head.appendChild(i)})(),document.body.onkeydown=(e=>{if(e.keyCode==s.enableDisable&&(n=!n,$("#paletools-status").css("color",n?"lime":"red").text(n?"ON":"OFF")),n)if(e.keyCode!=s.back)if(e.keyCode!=s.tech)try{let t=B()[e.keyCode];t&&t()}catch(e){P(e)}else(()=>{let e=parseInt($(".DetailPanel .auctionInfo .currency-coins").text().replace(",","").replace(".",""));if(!e||$(".DetailPanel .techAvion").length>0)return;let t=e+1e3*(Math.floor(e/1e4)-1)+3500;$(".DetailPanel .auctionInfo").append(`<div class="column"><span class="secondary subHeading techAvion">Tech Avion</span><span class="coins subContent">${t}</span></div>`)})();else O()});let f=e=>$("nav.ut-tab-bar").append(`<button class="ut-tab-bar-item" style="order:3">${e}</button>`),y=(e,t,n,o)=>f(`<a style="text-decoration:none;color:${o||"inherit"};cursor:pointer;cursor:hand" target="${t}" href="${e}">${n}</a>`);y("http://eallegretta.github.io/paletools/","paletools",'Paletools v2.0.2 <span id="paletools-status" style="color:lime">ON</span>'),y("https://twitter.com/FFVA","twitter","@FFVA","#0099FF;font-weight:bold"),f('<form id="paletools-donate" action="https://www.paypal.com/cgi-bin/webscr" method="post" target="_blank">\n    <input type="hidden" name="cmd" value="_donations" />\n    <input type="hidden" name="business" value="ZAJX6AD6XPLRN" />\n    <input type="hidden" name="currency_code" value="USD" />\n    <a style="text-decoration:none;color:inherit" onclick="javascript:$(\'#paletools-donate\')[0].submit()" href="javascript:void(0)">Paletools Donate</a></form></a>'),y("https://www.iesa-global.com","iesa",'<img src="data:image/jpeg;base64,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" alt="" />')}();";