window.paletools = {
    "paleavion": "KGZ1bmN0aW9uICgpIHsNCiAgICBpZiAod2luZG93Ll9fcGFsZWF2aW9uKSByZXR1cm47DQoNCiAgICBjb25zdCB2ZXIgPSAidjEuMCI7DQogICAgZG9jdW1lbnQuYm9keS5vbmtleXByZXNzID0gZSA9PiB7DQogICAgICAgIGlmIChlLmtleSA9PT0gJ3QnIHx8IGUua2V5ID09PSAnVCcpIHsNCiAgICAgICAgICAgIHZhciBjdXJyZW50VmFsdWUgPSBwYXJzZUludCgkKCcuRGV0YWlsUGFuZWwgLmF1Y3Rpb25JbmZvIC5jb2lucycpLnRleHQoKS5yZXBsYWNlKCcsJywgJycpLnJlcGxhY2UoJy4nLCcnKSk7DQogICAgICAgICAgICBpZiAoIWN1cnJlbnRWYWx1ZSkgcmV0dXJuOw0KICAgICAgICAgICAgdmFyIHRlY2hBdmlvbiA9IGN1cnJlbnRWYWx1ZSArICgoTWF0aC5mbG9vcihjdXJyZW50VmFsdWUgLyAxMDAwMCkgLSAxKSAqIDEwMDApICsgMzUwMDsNCiAgICAgICAgICAgIGlmICgkKCcuRGV0YWlsUGFuZWwgLnRlY2hBdmlvbicpLmxlbmd0aCA+IDApIHJldHVybjsNCiAgICAgICAgICAgICQoJy5EZXRhaWxQYW5lbCAuYXVjdGlvbkluZm8nKS5hcHBlbmQoJzxkaXYgY2xhc3M9XCdjb2x1bW5cJz48c3BhbiBjbGFzcz1cJ3NlY29uZGFyeSBzdWJIZWFkaW5nIHRlY2hBdmlvblwnPlRlY2ggQXZpb248L3NwYW4+PHNwYW4gY2xhc3M9XCdjb2lucyBzdWJDb250ZW50XCc+JyArIHRlY2hBdmlvbiArICc8L3NwYW4+PC9kaXY+Jyk7DQogICAgICAgIH0NCiAgICB9Ow0KDQogICAgJCgibmF2LnZpZXctdGFiLWJhciIpLmFwcGVuZCgnPGJ1dHRvbiBjbGFzcz0idmlldy10YWItYmFyLWl0ZW0iIHN0eWxlPSJvcmRlcjogNiI+PGEgc3R5bGU9InRleHQtZGVjb3JhdGlvbjpub25lO2NvbG9yOmluaGVyaXQiIHRhcmdldD0icGFsZXRvb2xzIiBocmVmPSJodHRwOi8vZWFsbGVncmV0dGEuZ2l0aHViLmlvL3BhbGV0b29scy5odG1sIj5QYWxlYXZpb24gJyArIHZlciArICc8L2E+Jyk7DQogICAgd2luZG93Ll9fcGFsZWF2aW9uID0gdHJ1ZTsNCn0pKCk7",
    "palefilter": "KGZ1bmN0aW9uICgpIHsNCiAgICBpZiAod2luZG93Ll9fcGFsZWZpbHRlcikgcmV0dXJuOw0KDQogICAgY29uc3QgdmVyID0gInYxLjAiOw0KICAgIGNvbnN0DQogICAgICAgIGxvY2FsZXMgPSB7DQogICAgICAgICAgICAnZXNfRVMnOiB7DQogICAgICAgICAgICAgICAgcGxheWVyczogJ0p1Z2Fkb3JlcycsDQogICAgICAgICAgICAgICAgc3F1YWRGaXRuZXNzOiAnRm9ybWEgZGUgcGxhbnRpbGxhJw0KICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICdlbl9VUyc6IHsNCiAgICAgICAgICAgICAgICBwbGF5ZXJzOiAnUGxheWVycycsDQogICAgICAgICAgICAgICAgc3F1YWRGaXRuZXNzOiAnU3F1YWQgRml0bmVzcycNCiAgICAgICAgICAgIH0sDQogICAgICAgICAgICAnZGVfREUnOiB7DQogICAgICAgICAgICAgICAgcGxheWVyczogJ1NwaWVsZXInLA0KICAgICAgICAgICAgICAgIHNxdWFkRml0bmVzczogJ1RlYW0tRml0bmVzcycNCiAgICAgICAgICAgIH0sDQogICAgICAgICAgICAnZnJfRlInOiB7DQogICAgICAgICAgICAgICAgcGxheWVyczogJ0pvdWV1cnMnLA0KICAgICAgICAgICAgICAgIHNxdWFkRml0bmVzczogJ0Zvcm1lIMOpcXVpcGUnDQogICAgICAgICAgICB9LA0KICAgICAgICAgICAgJ3B0X0JSJzogew0KICAgICAgICAgICAgICAgIHBsYXllcnM6ICdKb2dhZG9yZXMnLA0KICAgICAgICAgICAgICAgIHNxdWFkRml0bmVzczogJ1ByZXBhcm8gZsOtcy4gZWxlbmNvJw0KICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICdpdF9JVCc6IHsNCiAgICAgICAgICAgICAgICBwbGF5ZXJzOiAnR2lvY2F0b3JpJywNCiAgICAgICAgICAgICAgICBzcXVhZEZpdG5lc3M6ICdGb3JtYSBmaXNpY2Egcm9zYScNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCiAgICAgICAgZGlzcGF0Y2hNb3VzZUV2ZW50ID0gKCR0YXJnZXQsIGV2ZW50TmFtZSkgPT4gew0KICAgICAgICAgICAgaWYgKCR0YXJnZXQubGVuZ3RoID09IDApIHJldHVybjsNCiAgICAgICAgICAgIGNvbnN0IG1vdXNlRXZlbnQgPSBkb2N1bWVudC5jcmVhdGVFdmVudCgnTW91c2VFdmVudHMnKTsNCiAgICAgICAgICAgIG1vdXNlRXZlbnQuaW5pdEV2ZW50KGV2ZW50TmFtZSk7DQogICAgICAgICAgICAkdGFyZ2V0WzBdLmRpc3BhdGNoRXZlbnQobW91c2VFdmVudCkNCiAgICAgICAgfSwNCiAgICAgICAgbW91c2VEb3duID0gdGFyZ2V0ID0+IGRpc3BhdGNoTW91c2VFdmVudCh0YXJnZXQsICdtb3VzZWRvd24nKSwNCiAgICAgICAgbW91c2VVcCA9IHRhcmdldCA9PiBkaXNwYXRjaE1vdXNlRXZlbnQodGFyZ2V0LCAnbW91c2V1cCcpLA0KICAgICAgICBtb3VzZUNsaWNrID0gdGFyZ2V0ID0+IHsNCiAgICAgICAgICAgIG1vdXNlRG93bih0YXJnZXQpOw0KICAgICAgICAgICAgbW91c2VVcCh0YXJnZXQpOw0KICAgICAgICB9LA0KICAgICAgICBnZXRQbGF5ZXJTdGF0ID0gKHQsIGUpID0+ICQoJy5wbGF5ZXItc3RhdHMtZGF0YS1jb21wb25lbnQgLnZhbHVlJywgdClbZV0udGV4dENvbnRlbnQsDQogICAgICAgIHBsYXllckF0dHJzID0gew0KICAgICAgICAgICAgb3ZyOiB0ID0+ICQoJy5yYXRpbmcnLCB0KVswXS50ZXh0Q29udGVudCwNCiAgICAgICAgICAgIHBhYzogdCA9PiBnZXRQbGF5ZXJTdGF0KHQsIDApLA0KICAgICAgICAgICAgc2hvOiB0ID0+IGdldFBsYXllclN0YXQodCwgMSksDQogICAgICAgICAgICBwYXM6IHQgPT4gZ2V0UGxheWVyU3RhdCh0LCAyKSwNCiAgICAgICAgICAgIGRyaTogdCA9PiBnZXRQbGF5ZXJTdGF0KHQsIDMpLA0KICAgICAgICAgICAgZGVmOiB0ID0+IGdldFBsYXllclN0YXQodCwgNCksDQogICAgICAgICAgICBwaHk6IHQgPT4gZ2V0UGxheWVyU3RhdCh0LCA1KQ0KICAgICAgICB9LA0KICAgICAgICBnZXRTcXVhZEZpdG5lc3MgPSAodCkgPT4gJCgnLm5hbWU6Y29udGFpbnMoJyArIGxvY2FsZS5zcXVhZEZpdG5lc3MgKyAnKScsIHQpLmxlbmd0aCA+IDAgPyAkKCcuc3VidHlwZScsIHQpWzBdLnRleHRDb250ZW50IDogbnVsbCwNCiAgICAgICAgaGVhZGVyID0gJCgiI0ZJRkFIZWFkZXIiKTsNCg0KICAgIGxldCBsb2NhbGUgPSBsb2NhbGVzW3dpbmRvdy5sb2NhbFN0b3JhZ2UuVVRfTE9DQUxFXTsNCiAgICBsZXQgc2VsZWN0ZWRGaWx0ZXIgPSAncGxheWVyJzsNCiAgICAkKCI8c2VsZWN0IHN0eWxlPSdoZWlnaHQ6NDZweCc+PG9wdGlvbiB2YWx1ZT0ncGxheWVyJz4iICsgbG9jYWxlLnBsYXllcnMgKyAiPC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0nZml0bmVzcyc+IiArIGxvY2FsZS5zcXVhZEZpdG5lc3MgKyAiPC9vcHRpb24+PC9zZWxlY3Q+IikuY2hhbmdlKGZ1bmN0aW9uICgpIHsNCiAgICAgICAgc2VsZWN0ZWRGaWx0ZXIgPSB0aGlzLnZhbHVlOw0KICAgICAgICBpZih0aGlzLnZhbHVlID09ICdwbGF5ZXInKXsNCiAgICAgICAgICAgIHBsYXllckF0dHJzQ29udGFpbmVyLnNob3coKTsNCiAgICAgICAgICAgIHNxdWFkRml0bmVzc0NvbnRhaW5lci5oaWRlKCk7DQogICAgICAgIH0NCiAgICAgICAgZWxzZSB7DQogICAgICAgICAgICBwbGF5ZXJBdHRyc0NvbnRhaW5lci5oaWRlKCk7DQogICAgICAgICAgICBzcXVhZEZpdG5lc3NDb250YWluZXIuc2hvdygpOw0KICAgICAgICB9DQogICAgfSkuYXBwZW5kVG8oaGVhZGVyKTsNCg0KICAgIGxldCBwbGF5ZXJBdHRyc0NvbnRhaW5lciA9ICQoIjxkaXYgLz4iKS5jc3MoImRpc3BsYXkiLCAiaW5saW5lLWJsb2NrIikuYXBwZW5kVG8oaGVhZGVyKTsNCiAgICBmb3IgKHZhciBwbGF5ZXJBdHRyIGluIHBsYXllckF0dHJzKSB7DQogICAgICAgICQoJzxpbnB1dCAvPicpLmF0dHIoJ2lkJywgJ18nICsgcGxheWVyQXR0cikuYXR0cigndHlwZScsICd0ZXh0JykuYXR0cignc3R5bGUnLCAnd2lkdGg6NTJweCcpLmFkZENsYXNzKCdwbGF5ZXJhdHRyJykuYXR0cigncGxhY2Vob2xkZXInLCBwbGF5ZXJBdHRyLnRvVXBwZXJDYXNlKCkpLmFwcGVuZFRvKHBsYXllckF0dHJzQ29udGFpbmVyKTsNCiAgICB9DQoNCiAgICBsZXQgc3F1YWRGaXRuZXNzQ29udGFpbmVyID0gJCgiPHNlbGVjdCBpZD0nc3F1YWRGaXRuZXNzJyBzdHlsZT0naGVpZ2h0OjQ2cHgnPjxvcHRpb24gdmFsdWU9JyszMCc+KzMwPC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0nKzIwJz4rMjA8L29wdGlvbj48b3B0aW9uIHZhbHVlPScrMTAnPisxMDwvb3B0aW9uPjwvc2VsZWN0PiIpLmFwcGVuZFRvKGhlYWRlcikuaGlkZSgpOw0KDQogICAgJCgnLnZpZXctcm9vdCcpLm9uKCdET01TdWJ0cmVlTW9kaWZpZWQnLCBmdW5jdGlvbiAoZWxlbSkgew0KICAgICAgICB2YXIgaXRlbXMgPSAkKCcubGlzdEZVVEl0ZW0nLCBlbGVtLnRhcmdldCk7DQogICAgICAgIGxldCBzZWxlY3RlZFNxdWFkRml0bmVzcyA9ICQoIiNzcXVhZEZpdG5lc3MiKS52YWwoKTsNCiAgICAgICAgaXRlbXMuZWFjaChmdW5jdGlvbiAoKSB7DQogICAgICAgICAgICBpZiAoc2VsZWN0ZWRGaWx0ZXIgPT09ICdwbGF5ZXInKSB7DQogICAgICAgICAgICAgICAgZm9yICh2YXIgcGxheWVyQXR0ciBpbiBwbGF5ZXJBdHRycykgew0KICAgICAgICAgICAgICAgICAgICB2YXIgYXR0clZhbHVlID0gJCgnI18nICsgcGxheWVyQXR0cikudmFsKCk7DQogICAgICAgICAgICAgICAgICAgIGlmIChhdHRyVmFsdWUgJiYgcGxheWVyQXR0cnNbcGxheWVyQXR0cl0odGhpcykgIT0gYXR0clZhbHVlKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAkKHRoaXMpLmhpZGUoKTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgIGVsc2UgaWYoc2VsZWN0ZWRGaWx0ZXIgPT09ICdmaXRuZXNzJykgew0KICAgICAgICAgICAgICAgIGlmKGdldFNxdWFkRml0bmVzcyh0aGlzKSAhPSBzZWxlY3RlZFNxdWFkRml0bmVzcyl7DQogICAgICAgICAgICAgICAgICAgICQodGhpcykuaGlkZSgpOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCg0KICAgICAgICB9KTsNCiAgICAgICAgbGV0IHZpc2libGVJdGVtcyA9IGl0ZW1zLmZpbHRlcigiOnZpc2libGUiKTsNCiAgICAgICAgaWYgKHZpc2libGVJdGVtcy5sZW5ndGggPiAwKSB7DQogICAgICAgICAgICBtb3VzZUNsaWNrKHZpc2libGVJdGVtcyk7DQogICAgICAgIH0NCiAgICB9KTsNCg0KICAgICQoIm5hdi52aWV3LXRhYi1iYXIiKS5hcHBlbmQoJzxidXR0b24gY2xhc3M9InZpZXctdGFiLWJhci1pdGVtIiBzdHlsZT0ib3JkZXI6IDYiPjxhIHN0eWxlPSJ0ZXh0LWRlY29yYXRpb246bm9uZTtjb2xvcjppbmhlcml0IiB0YXJnZXQ9InBhbGV0b29scyIgaHJlZj0iaHR0cDovL2VhbGxlZ3JldHRhLmdpdGh1Yi5pby9wYWxldG9vbHMuaHRtbCI+UGFsZWZpbHRlciAnICsgdmVyICsgJzwvYT4nKTsNCiAgICB3aW5kb3cuX19wYWxlZmlsdGVyID0gdHJ1ZTsNCn0pKCk7",
    "palesnipe": "KGZ1bmN0aW9uKGRlY3JlbWVudE1pbkJpZEtleSwgDQogICAgaW5jcmVtZW50TWluQmluS2V5LCANCiAgICBkZWNyZW1lbnRNYXhCdXlOb3dLZXksIA0KICAgIGluY3JlbWVudE1heEJ1eU5vd0tleSwgDQogICAgYmFja0J1dHRvbktleSwgDQogICAgc2VhcmNoQnV0dG9uS2V5LCANCiAgICBidXlOb3dCdXR0b25LZXksIA0KICAgIHNlbmRUb1RyYW5zZmVyTGlzdEJ1dHRvbktleSwNCiAgICBzZW5kVG9DbHViQnV0dG9uS2V5KSB7DQogICAgY29uc3QgdmVyID0gInYxLjAiOw0KICAgIA0KICAgIGlmKHdpbmRvdy5fX3BhbGVzbmlwZSkgcmV0dXJuOw0KDQogICAgY29uc3QgbG9jYWxlQnV0dG9ucyA9IHsNCiAgICAgICAgICAgICdlc19FUyc6IHsNCiAgICAgICAgICAgICAgICBzdG9yZUluQ2x1YjogJ0VudmlhciBhIE1pIGNsdWInLA0KICAgICAgICAgICAgICAgIHNlbmRUcmFkZVBpbGU6ICdFbnZpYXIgYSB0cmFuc2ZlcmlibGVzJw0KICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICdlbl9VUyc6IHsNCiAgICAgICAgICAgICAgICBzdG9yZUluQ2x1YjogJ1NlbmQgdG8gTXkgQ2x1YicsDQogICAgICAgICAgICAgICAgc2VuZFRyYWRlUGlsZTogJ1NlbmQgdG8gVHJhbnNmZXIgTGlzdCcNCiAgICAgICAgICAgIH0sDQogICAgICAgICAgICAnZnJfRlInOiB7DQogICAgICAgICAgICAgICAgc3RvcmVJbkNsdWI6ICdFbnZveWVyIHZlcnMgTW9uIGNsdWInLA0KICAgICAgICAgICAgICAgIHNlbmRUcmFkZVBpbGU6ICdFbnYuIExpc3RlIHRyYW5zZi4nDQogICAgICAgICAgICB9LA0KICAgICAgICAgICAgJ2RlX0RFJzogew0KICAgICAgICAgICAgICAgIHN0b3JlSW5DbHViOiAnWnUgTWVpbiBWZXJlaW4nLA0KICAgICAgICAgICAgICAgIHNlbmRUcmFkZVBpbGU6ICdBdWYgVHJhbnNmZXJsaXN0ZScNCiAgICAgICAgICAgIH0sDQogICAgICAgICAgICAnaXRfSVQnOiB7DQogICAgICAgICAgICAgICAgc3RvcmVJbkNsdWI6ICdJbnZpYSBhIElsIG1pbyBjbHViJywNCiAgICAgICAgICAgICAgICBzZW5kVHJhZGVQaWxlOiAnSW52aWEgYSB0cmFzZmVyaW0uJw0KICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICdwdF9CUic6IHsNCiAgICAgICAgICAgICAgICBzdG9yZUluQ2x1YjogJ0VudmlhciBhbyBNZXUgY2x1YmUnLA0KICAgICAgICAgICAgICAgIHNlbmRUcmFkZVBpbGU6ICdFbnZpYXIgcGFyYSBUcmFuc2Zlci4nDQogICAgICAgICAgICB9DQogICAgICAgIH0sDQogICAgICAgIGRpc3BhdGNoTW91c2VFdmVudCA9ICgkdGFyZ2V0LCBldmVudE5hbWUpID0+IHsNCiAgICAgICAgICAgIGlmKCR0YXJnZXQubGVuZ3RoID09IDApIHJldHVybjsNCiAgICAgICAgICAgIGNvbnN0IG1vdXNlRXZlbnQgPSBkb2N1bWVudC5jcmVhdGVFdmVudCgnTW91c2VFdmVudHMnKTsNCiAgICAgICAgICAgIG1vdXNlRXZlbnQuaW5pdEV2ZW50KGV2ZW50TmFtZSk7DQogICAgICAgICAgICAkdGFyZ2V0WzBdLmRpc3BhdGNoRXZlbnQobW91c2VFdmVudCkNCiAgICAgICAgfSwNCiAgICAgICAgbW91c2VEb3duID0gdGFyZ2V0ID0+IGRpc3BhdGNoTW91c2VFdmVudCh0YXJnZXQsICdtb3VzZWRvd24nKSwNCiAgICAgICAgbW91c2VVcCA9IHRhcmdldCA9PiBkaXNwYXRjaE1vdXNlRXZlbnQodGFyZ2V0LCAnbW91c2V1cCcpLA0KICAgICAgICBtb3VzZUNsaWNrID0gdGFyZ2V0ID0+IHsgDQogICAgICAgICAgICBtb3VzZURvd24odGFyZ2V0KTsNCiAgICAgICAgICAgIG1vdXNlVXAodGFyZ2V0KTsNCiAgICAgICAgfSwNCiAgICAgICAga2V5cyA9IHsNCiAgICAgICAgICAgIFtkZWNyZW1lbnRNaW5CaWRLZXldOiAoKSA9PiBtb3VzZUNsaWNrKCQoJy5kZWNyZW1lbnQtdmFsdWUnKSksDQogICAgICAgICAgICBbaW5jcmVtZW50TWluQmluS2V5XTogKCkgPT4gbW91c2VDbGljaygkKCcuaW5jcmVtZW50LXZhbHVlJykpLA0KICAgICAgICAgICAgW2RlY3JlbWVudE1heEJ1eU5vd0tleV06ICgpID0+IG1vdXNlQ2xpY2soJCgnLmRlY3JlbWVudC12YWx1ZTplcSgzKScpKSwNCiAgICAgICAgICAgIFtpbmNyZW1lbnRNYXhCdXlOb3dLZXldOiAoKSA9PiBtb3VzZUNsaWNrKCQoJy5pbmNyZW1lbnQtdmFsdWU6ZXEoMyknKSksDQogICAgICAgICAgICBbYmFja0J1dHRvbktleV06ICgpID0+IG1vdXNlQ2xpY2soJCgnLk5hdmlnYXRpb25CYXIgLmJ0bi1uYXZpZ2F0aW9uJykpLA0KICAgICAgICAgICAgW3NlYXJjaEJ1dHRvbktleV06ICgpID0+IG1vdXNlQ2xpY2soJCgnI3V0LXNlYXJjaC13cmFwcGVyIC5jYWxsLXRvLWFjdGlvbicpKSwNCiAgICAgICAgICAgIFtidXlOb3dCdXR0b25LZXldOiAoKSA9PiBtb3VzZUNsaWNrKCQoJy5idXlCdXR0b24nKSksDQogICAgICAgICAgICBbc2VuZFRvVHJhbnNmZXJMaXN0QnV0dG9uS2V5XTogKCkgPT4gbW91c2VDbGljaygkKCIudXQtYnV0dG9uLWdyb3VwID4gYnV0dG9uOmNvbnRhaW5zKCciICsgbG9jYWxlQnV0dG9uc1t3aW5kb3cubG9jYWxTdG9yYWdlLlVUX0xPQ0FMRV0uc2VuZFRyYWRlUGlsZSArICInKSIpKSwNCiAgICAgICAgICAgIFtzZW5kVG9DbHViQnV0dG9uS2V5XTogKCkgPT4gbW91c2VDbGljaygkKCIudXQtYnV0dG9uLWdyb3VwID4gYnV0dG9uOmNvbnRhaW5zKCciICsgbG9jYWxlQnV0dG9uc1t3aW5kb3cubG9jYWxTdG9yYWdlLlVUX0xPQ0FMRV0uc3RvcmVJbkNsdWIgKyAiJykiKSkNCiAgICAgICAgfTsNCg0KICAgIGNvbnNvbGUubG9nKGtleXMpOw0KDQogICAgZG9jdW1lbnQuYm9keS5vbmtleWRvd24gPSBlID0+IHsNCiAgICAgICAgaWYoIWtleXMuaGFzT3duUHJvcGVydHkoZS5rZXlDb2RlKSkgcmV0dXJuOw0KICAgICAgICBrZXlzW2Uua2V5Q29kZV0oKTsNCiAgICB9Ow0KDQogICAgJCgibmF2LnZpZXctdGFiLWJhciIpLmFwcGVuZCgnPGJ1dHRvbiBjbGFzcz0idmlldy10YWItYmFyLWl0ZW0iIHN0eWxlPSJvcmRlcjogNiI+PGEgc3R5bGU9InRleHQtZGVjb3JhdGlvbjpub25lO2NvbG9yOmluaGVyaXQiIHRhcmdldD0icGFsZXRvb2xzIiBocmVmPSJodHRwOi8vZWFsbGVncmV0dGEuZ2l0aHViLmlvL3BhbGV0b29scy5odG1sIj5QYWxlc25pcGUgJyArIHZlciArICc8L2E+Jyk7DQogICAgd2luZG93Ll9fcGFsZXNuaXBlID0gdHJ1ZTsNCn0pKDM3LDM5LDQwLDM4LDQ5LDUwLDUxLDUyLDUzKTs="
};