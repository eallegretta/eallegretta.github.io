window.paletools = { "paleavion": "KGZ1bmN0aW9uICgpIHsNCiAgICBpZiAod2luZG93Ll9fcGFsZWF2aW9uKSByZXR1cm47DQoNCiAgICB3aW5kb3cuXzB4MWMxODg3ID0gZnVuY3Rpb24oKXt9DQoNCiAgICBjb25zdCB2ZXIgPSAidjEuMSI7DQogICAgZG9jdW1lbnQuYm9keS5vbmtleXByZXNzID0gZSA9PiB7DQogICAgICAgIGlmIChlLmtleSA9PT0gJ3QnIHx8IGUua2V5ID09PSAnVCcpIHsNCiAgICAgICAgICAgIHZhciBjdXJyZW50VmFsdWUgPSBwYXJzZUludCgkKCcuRGV0YWlsUGFuZWwgLmF1Y3Rpb25JbmZvIC5jdXJyZW5jeS1jb2lucycpLnRleHQoKS5yZXBsYWNlKCcsJywgJycpLnJlcGxhY2UoJy4nLCcnKSk7DQogICAgICAgICAgICBpZiAoIWN1cnJlbnRWYWx1ZSkgcmV0dXJuOw0KICAgICAgICAgICAgdmFyIHRlY2hBdmlvbiA9IGN1cnJlbnRWYWx1ZSArICgoTWF0aC5mbG9vcihjdXJyZW50VmFsdWUgLyAxMDAwMCkgLSAxKSAqIDEwMDApICsgMzUwMDsNCiAgICAgICAgICAgIGlmICgkKCcuRGV0YWlsUGFuZWwgLnRlY2hBdmlvbicpLmxlbmd0aCA+IDApIHJldHVybjsNCiAgICAgICAgICAgICQoJy5EZXRhaWxQYW5lbCAuYXVjdGlvbkluZm8nKS5hcHBlbmQoJzxkaXYgY2xhc3M9XCdjb2x1bW5cJz48c3BhbiBjbGFzcz1cJ3NlY29uZGFyeSBzdWJIZWFkaW5nIHRlY2hBdmlvblwnPlRlY2ggQXZpb248L3NwYW4+PHNwYW4gY2xhc3M9XCdjb2lucyBzdWJDb250ZW50XCc+JyArIHRlY2hBdmlvbiArICc8L3NwYW4+PC9kaXY+Jyk7DQogICAgICAgIH0NCiAgICB9Ow0KDQogICAgJCgibmF2LnV0LXRhYi1iYXIiKS5hcHBlbmQoJzxidXR0b24gY2xhc3M9InV0LXRhYi1iYXItaXRlbSIgc3R5bGU9Im9yZGVyOiA2Ij48YSBzdHlsZT0idGV4dC1kZWNvcmF0aW9uOm5vbmU7Y29sb3I6aW5oZXJpdCIgdGFyZ2V0PSJwYWxldG9vbHMiIGhyZWY9Imh0dHA6Ly9lYWxsZWdyZXR0YS5naXRodWIuaW8vcGFsZXRvb2xzLmh0bWwiPlBhbGVhdmlvbiAnICsgdmVyICsgJzwvYT4nKTsNCiAgICB3aW5kb3cuX19wYWxlYXZpb24gPSB0cnVlOw0KfSkoKTs=",
"palefilter": "d2luZG93Ll8weDFjMTg4NyA9IGZ1bmN0aW9uKCl7fQ0KDQooZnVuY3Rpb24gKCkgew0KICAgIGlmICh3aW5kb3cuX19wYWxlZmlsdGVyKSByZXR1cm47DQoNCiAgICBjb25zdCB2ZXIgPSAidjEuNCI7DQogICAgY29uc3QNCiAgICAgICAgbG9jYWxlUGxheWVycyA9IHdpbmRvdy5zZXJ2aWNlcy5Mb2NhbGl6YXRpb24ubG9jYWxpemUoJ3NlYXJjaC5maWx0ZXJzLnBsYXllcnMnKSwNCiAgICAgICAgbG9jYWxlU3F1YWRGaXRuZXNzID0gd2luZG93LnNlcnZpY2VzLkxvY2FsaXphdGlvbi5sb2NhbGl6ZSgnY2FyZC50aXRsZS5zcXVhZGZpdG5lc3MnKSwNCiAgICAgICAgZGlzcGF0Y2hNb3VzZUV2ZW50ID0gKCR0YXJnZXQsIGV2ZW50TmFtZSkgPT4gew0KICAgICAgICAgICAgaWYgKCR0YXJnZXQubGVuZ3RoID09IDApIHJldHVybjsNCiAgICAgICAgICAgIGNvbnN0IG1vdXNlRXZlbnQgPSBkb2N1bWVudC5jcmVhdGVFdmVudCgnTW91c2VFdmVudHMnKTsNCiAgICAgICAgICAgIG1vdXNlRXZlbnQuaW5pdEV2ZW50KGV2ZW50TmFtZSk7DQogICAgICAgICAgICAkdGFyZ2V0WzBdLmRpc3BhdGNoRXZlbnQobW91c2VFdmVudCkNCiAgICAgICAgfSwNCiAgICAgICAgbW91c2VEb3duID0gdGFyZ2V0ID0+IGRpc3BhdGNoTW91c2VFdmVudCh0YXJnZXQsICdtb3VzZWRvd24nKSwNCiAgICAgICAgbW91c2VVcCA9IHRhcmdldCA9PiBkaXNwYXRjaE1vdXNlRXZlbnQodGFyZ2V0LCAnbW91c2V1cCcpLA0KICAgICAgICBtb3VzZUNsaWNrID0gdGFyZ2V0ID0+IHsNCiAgICAgICAgICAgIG1vdXNlRG93bih0YXJnZXQpOw0KICAgICAgICAgICAgbW91c2VVcCh0YXJnZXQpOw0KICAgICAgICB9LA0KICAgICAgICBnZXRQbGF5ZXJTdGF0ID0gKHQsIGUpID0+ICQoJy5wbGF5ZXItc3RhdHMtZGF0YS1jb21wb25lbnQgLnZhbHVlJywgdClbZV0udGV4dENvbnRlbnQsDQogICAgICAgIHBsYXllckF0dHJzID0gew0KICAgICAgICAgICAgb3ZyOiB0ID0+ICQoJy5yYXRpbmcnLCB0KVswXS50ZXh0Q29udGVudCwNCiAgICAgICAgICAgIHBhYzogdCA9PiBnZXRQbGF5ZXJTdGF0KHQsIDApLA0KICAgICAgICAgICAgc2hvOiB0ID0+IGdldFBsYXllclN0YXQodCwgMSksDQogICAgICAgICAgICBwYXM6IHQgPT4gZ2V0UGxheWVyU3RhdCh0LCAyKSwNCiAgICAgICAgICAgIGRyaTogdCA9PiBnZXRQbGF5ZXJTdGF0KHQsIDMpLA0KICAgICAgICAgICAgZGVmOiB0ID0+IGdldFBsYXllclN0YXQodCwgNCksDQogICAgICAgICAgICBwaHk6IHQgPT4gZ2V0UGxheWVyU3RhdCh0LCA1KQ0KICAgICAgICB9LA0KICAgICAgICBnZXRTcXVhZEZpdG5lc3MgPSAodCkgPT4gJCgnLm5hbWU6Y29udGFpbnMoJyArIGxvY2FsZVNxdWFkRml0bmVzcyArICcpJywgdCkubGVuZ3RoID4gMCA/ICQoJy5zdWJ0eXBlJywgdClbMF0udGV4dENvbnRlbnQgOiBudWxsLA0KICAgICAgICBoZWFkZXIgPSAkKCIudXQtZmlmYS1oZWFkZXItdmlldyIpOw0KDQogICAgbGV0IHNlbGVjdGVkRmlsdGVyID0gJ3BsYXllcic7DQogICAgJCgiPHNlbGVjdCBzdHlsZT0naGVpZ2h0OjQ2cHgnPjxvcHRpb24gdmFsdWU9J3BsYXllcic+IiArIGxvY2FsZVBsYXllcnMgKyAiPC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0nZml0bmVzcyc+IiArIGxvY2FsZVNxdWFkRml0bmVzcyArICI8L29wdGlvbj48L3NlbGVjdD4iKS5jaGFuZ2UoZnVuY3Rpb24gKCkgew0KICAgICAgICBzZWxlY3RlZEZpbHRlciA9IHRoaXMudmFsdWU7DQogICAgICAgIGlmICh0aGlzLnZhbHVlID09ICdwbGF5ZXInKSB7DQogICAgICAgICAgICBwbGF5ZXJBdHRyc0NvbnRhaW5lci5zaG93KCk7DQogICAgICAgICAgICBzcXVhZEZpdG5lc3NDb250YWluZXIuaGlkZSgpOw0KICAgICAgICB9DQogICAgICAgIGVsc2Ugew0KICAgICAgICAgICAgcGxheWVyQXR0cnNDb250YWluZXIuaGlkZSgpOw0KICAgICAgICAgICAgc3F1YWRGaXRuZXNzQ29udGFpbmVyLnNob3coKTsNCiAgICAgICAgfQ0KICAgIH0pLmFwcGVuZFRvKGhlYWRlcik7DQoNCiAgICBsZXQgcGxheWVyQXR0cnNDb250YWluZXIgPSAkKCI8ZGl2IC8+IikuY3NzKCJkaXNwbGF5IiwgImlubGluZS1ibG9jayIpLmFwcGVuZFRvKGhlYWRlcik7DQogICAgZm9yICh2YXIgcGxheWVyQXR0ciBpbiBwbGF5ZXJBdHRycykgew0KICAgICAgICAkKCc8aW5wdXQgLz4nKS5hdHRyKCdpZCcsICdfJyArIHBsYXllckF0dHIpLmF0dHIoJ3R5cGUnLCAndGV4dCcpLmF0dHIoJ3N0eWxlJywgJ3dpZHRoOjUycHgnKS5hZGRDbGFzcygncGxheWVyYXR0cicpLmF0dHIoJ3BsYWNlaG9sZGVyJywgcGxheWVyQXR0ci50b1VwcGVyQ2FzZSgpKS5hcHBlbmRUbyhwbGF5ZXJBdHRyc0NvbnRhaW5lcik7DQogICAgfQ0KDQogICAgbGV0IHNxdWFkRml0bmVzc0NvbnRhaW5lciA9ICQoIjxzZWxlY3QgaWQ9J3NxdWFkRml0bmVzcycgc3R5bGU9J2hlaWdodDo0NnB4Jz48b3B0aW9uIHZhbHVlPScrMzAnPiszMDwvb3B0aW9uPjxvcHRpb24gdmFsdWU9JysyMCc+KzIwPC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0nKzEwJz4rMTA8L29wdGlvbj48L3NlbGVjdD4iKS5hcHBlbmRUbyhoZWFkZXIpLmhpZGUoKTsNCg0KICAgICQoJy51dC1jb250ZW50Jykub24oJ0RPTVN1YnRyZWVNb2RpZmllZCcsIGZ1bmN0aW9uIChlbGVtKSB7DQogICAgICAgIGxldCBpdGVtcyA9ICQoJy5saXN0RlVUSXRlbScsIGVsZW0udGFyZ2V0KTsNCiAgICAgICAgbGV0IHNlbGVjdGVkU3F1YWRGaXRuZXNzID0gJCgiI3NxdWFkRml0bmVzcyIpLnZhbCgpOw0KICAgICAgICBpdGVtcy5lYWNoKGZ1bmN0aW9uICgpIHsNCiAgICAgICAgICAgIGlmIChzZWxlY3RlZEZpbHRlciA9PT0gJ3BsYXllcicpIHsNCiAgICAgICAgICAgICAgICBmb3IgKHZhciBwbGF5ZXJBdHRyIGluIHBsYXllckF0dHJzKSB7DQogICAgICAgICAgICAgICAgICAgIHZhciBhdHRyVmFsdWUgPSAkKCcjXycgKyBwbGF5ZXJBdHRyKS52YWwoKTsNCiAgICAgICAgICAgICAgICAgICAgaWYgKGF0dHJWYWx1ZSAmJiBwbGF5ZXJBdHRyc1twbGF5ZXJBdHRyXSh0aGlzKSAhPSBhdHRyVmFsdWUpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICQodGhpcykucmVtb3ZlKCk7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQogICAgICAgICAgICBlbHNlIGlmIChzZWxlY3RlZEZpbHRlciA9PT0gJ2ZpdG5lc3MnKSB7DQogICAgICAgICAgICAgICAgaWYgKGdldFNxdWFkRml0bmVzcyh0aGlzKSAhPSBzZWxlY3RlZFNxdWFkRml0bmVzcykgew0KICAgICAgICAgICAgICAgICAgICAkKHRoaXMpLnJlbW92ZSgpOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCg0KICAgICAgICB9KTsNCg0KICAgICAgICBpdGVtcyA9ICQoJy5saXN0RlVUSXRlbScsIGVsZW0udGFyZ2V0KTsNCiAgICAgICAgaWYgKGl0ZW1zLmxlbmd0aCA+IDApIHsNCiAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgew0KICAgICAgICAgICAgICAgIG1vdXNlQ2xpY2soaXRlbXMpOw0KICAgICAgICAgICAgfSwgMCk7DQogICAgICAgIH0NCg0KICAgIH0pOw0KDQogICAgJCgibmF2LnV0LXRhYi1iYXIiKS5hcHBlbmQoJzxidXR0b24gY2xhc3M9InV0LXRhYi1iYXItaXRlbSIgc3R5bGU9Im9yZGVyOiA3Ij48YSBzdHlsZT0idGV4dC1kZWNvcmF0aW9uOm5vbmU7Y29sb3I6aW5oZXJpdCIgdGFyZ2V0PSJwYWxldG9vbHMiIGhyZWY9Imh0dHA6Ly9lYWxsZWdyZXR0YS5naXRodWIuaW8vcGFsZXRvb2xzLmh0bWwiPlBhbGVmaWx0ZXIgJyArIHZlciArICc8L2E+Jyk7DQogICAgd2luZG93Ll9fcGFsZWZpbHRlciA9IHRydWU7DQp9KSgpOw==",
"palesnipe": "d2luZG93LnBhbGVzbmlwZSA9IHdpbmRvdy5wYWxlc25pcGUgfHwgew0KICAgIGRlY3JlbWVudE1pbkJpZEtleTogMzcsDQogICAgaW5jcmVtZW50TWluQmluS2V5OiAzOSwNCiAgICBkZWNyZW1lbnRNYXhCaW5LZXk6IDk4LA0KICAgIGluY3JlbWVudE1heEJpbktleTogMTA0LA0KICAgIGRlY3JlbWVudE1pbkJ1eU5vd0tleTogMTAwLA0KICAgIGluY3JlbWVudE1pbkJ1eU5vd0tleTogMTAyLA0KICAgIGRlY3JlbWVudE1heEJ1eU5vd0tleTogNDAsDQogICAgaW5jcmVtZW50TWF4QnV5Tm93S2V5OiAzOCwNCiAgICBiYWNrQnV0dG9uS2V5OiA0OSwNCiAgICBzZWFyY2hCdXR0b25LZXk6IDUwLA0KICAgIGJ1eU5vd0J1dHRvbktleTogNTEsDQogICAgc2VuZFRvVHJhbnNmZXJMaXN0QnV0dG9uS2V5OiA1MiwNCiAgICBzZW5kVG9DbHViQnV0dG9uS2V5OiA1MywNCiAgICBhdXRvUHJlc3NFbnRlckFmdGVyQnV5Tm93OiB0cnVlLA0KICAgIGF1dG9CdXlBZnRlclNlYXJjaDogZmFsc2UsDQogICAgZW5hYmxlRGlzYWJsZVBhbGVzbmlwZUtleTogOQ0KfTsNCg0KKGZ1bmN0aW9uICgpIHsNCiAgICBjb25zdCB2ZXIgPSAidjEuNSI7DQoNCiAgICBpZiAod2luZG93Ll9fcGFsZXNuaXBlKSByZXR1cm47DQoNCiAgICB3aW5kb3cuXzB4MWMxODg3ID0gZnVuY3Rpb24gKCkgeyB9DQoNCiAgICBsZXQgcCA9IHdpbmRvdy5wYWxlc25pcGU7DQogICAgbGV0IGxvYyA9IHdpbmRvdy5zZXJ2aWNlcy5Mb2NhbGl6YXRpb247DQogICAgbGV0IGVuYWJsZWQgPSB0cnVlOw0KICAgIGxldCBiYWNrQnV0dG9uTGFzdERhdGUgPSBuZXcgRGF0ZSgpOw0KDQogICAgY29uc3QNCiAgICAgICAgQkFDS19CVVRUT05fVEhSRVNIT0xEID0gNTAwLA0KICAgICAgICBkaXNwYXRjaE1vdXNlRXZlbnQgPSAoJHRhcmdldCwgZXZlbnROYW1lKSA9PiB7DQogICAgICAgICAgICBpZiAoJHRhcmdldC5sZW5ndGggPT0gMCkgcmV0dXJuOw0KICAgICAgICAgICAgY29uc3QgbW91c2VFdmVudCA9IGRvY3VtZW50LmNyZWF0ZUV2ZW50KCdNb3VzZUV2ZW50cycpOw0KICAgICAgICAgICAgbW91c2VFdmVudC5pbml0RXZlbnQoZXZlbnROYW1lKTsNCiAgICAgICAgICAgICR0YXJnZXRbMF0uZGlzcGF0Y2hFdmVudChtb3VzZUV2ZW50KQ0KICAgICAgICB9LA0KICAgICAgICBtb3VzZURvd24gPSB0YXJnZXQgPT4gZGlzcGF0Y2hNb3VzZUV2ZW50KHRhcmdldCwgJ21vdXNlZG93bicpLA0KICAgICAgICBtb3VzZVVwID0gdGFyZ2V0ID0+IGRpc3BhdGNoTW91c2VFdmVudCh0YXJnZXQsICdtb3VzZXVwJyksDQogICAgICAgIG1vdXNlQ2xpY2sgPSB0YXJnZXQgPT4gew0KICAgICAgICAgICAgbW91c2VEb3duKHRhcmdldCk7DQogICAgICAgICAgICBtb3VzZVVwKHRhcmdldCk7DQogICAgICAgIH0sDQogICAgICAgIGJ1eU5vdyA9ICh0aW1lb3V0KSA9PiB7DQogICAgICAgICAgICBmdW5jdGlvbiBidXkoKXsNCiAgICAgICAgICAgICAgICBtb3VzZUNsaWNrKCQoJy5idXlCdXR0b24nKSk7DQogICAgICAgICAgICAgICAgaWYgKHAuYXV0b1ByZXNzRW50ZXJBZnRlckJ1eU5vdykgew0KICAgICAgICAgICAgICAgICAgICBwcmVzc09rQnRuKCk7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICBpZiAodGltZW91dCkgew0KICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoYnV5LCB0aW1lb3V0KQ0KICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgYnV5KCk7DQogICAgICAgIH0sDQogICAgICAgIHByZXNzT2tCdG4gPSAoKSA9PiBzZXRUaW1lb3V0KCgpID0+IG1vdXNlQ2xpY2soJCgnLmRpYWxvZy1ib2R5IC51dC1idXR0b24tZ3JvdXAgYnV0dG9uOmVxKDApJykpLCAxMDApLA0KICAgICAgICBrZXlzID0gew0KICAgICAgICAgICAgW3AuZGVjcmVtZW50TWluQmlkS2V5XTogKCkgPT4gbW91c2VDbGljaygkKCcuZGVjcmVtZW50LXZhbHVlJykpLA0KICAgICAgICAgICAgW3AuaW5jcmVtZW50TWluQmluS2V5XTogKCkgPT4gbW91c2VDbGljaygkKCcuaW5jcmVtZW50LXZhbHVlJykpLA0KICAgICAgICAgICAgW3AuZGVjcmVtZW50TWF4QmluS2V5XTogKCkgPT4gbW91c2VDbGljaygkKCcuZGVjcmVtZW50LXZhbHVlOmVxKDEpJykpLA0KICAgICAgICAgICAgW3AuaW5jcmVtZW50TWF4QmluS2V5XTogKCkgPT4gbW91c2VDbGljaygkKCcuaW5jcmVtZW50LXZhbHVlOmVxKDEpJykpLA0KICAgICAgICAgICAgW3AuZGVjcmVtZW50TWluQnV5Tm93S2V5XTogKCkgPT4gbW91c2VDbGljaygkKCcuZGVjcmVtZW50LXZhbHVlOmVxKDIpJykpLA0KICAgICAgICAgICAgW3AuaW5jcmVtZW50TWluQnV5Tm93S2V5XTogKCkgPT4gbW91c2VDbGljaygkKCcuaW5jcmVtZW50LXZhbHVlOmVxKDIpJykpLA0KICAgICAgICAgICAgW3AuZGVjcmVtZW50TWF4QnV5Tm93S2V5XTogKCkgPT4gbW91c2VDbGljaygkKCcuZGVjcmVtZW50LXZhbHVlOmVxKDMpJykpLA0KICAgICAgICAgICAgW3AuaW5jcmVtZW50TWF4QnV5Tm93S2V5XTogKCkgPT4gbW91c2VDbGljaygkKCcuaW5jcmVtZW50LXZhbHVlOmVxKDMpJykpLA0KICAgICAgICAgICAgW3AuYmFja0J1dHRvbktleV06ICgpID0+IHsNCiAgICAgICAgICAgICAgICBpZiAobmV3IERhdGUoKSAtIGJhY2tCdXR0b25MYXN0RGF0ZSA8IEJBQ0tfQlVUVE9OX1RIUkVTSE9MRCkgew0KICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIGJhY2tCdXR0b25MYXN0RGF0ZSA9IG5ldyBEYXRlKCk7DQogICAgICAgICAgICAgICAgbW91c2VDbGljaygkKCcudXQtbmF2aWdhdGlvbi1idXR0b24tY29udHJvbCcpKTsNCiAgICAgICAgICAgIH0sDQogICAgICAgICAgICBbcC5zZWFyY2hCdXR0b25LZXldOiAoKSA9PiB7DQogICAgICAgICAgICAgICAgbW91c2VDbGljaygkKCcuYnV0dG9uLWNvbnRhaW5lciAuYnRuLXN0YW5kYXJkLmNhbGwtdG8tYWN0aW9uJykpOw0KICAgICAgICAgICAgICAgIGlmKHAuYXV0b0J1eUFmdGVyU2VhcmNoKXsNCiAgICAgICAgICAgICAgICAgICAgYnV5Tm93KDEwMCk7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfSwNCiAgICAgICAgICAgIFtwLmJ1eU5vd0J1dHRvbktleV06ICgpID0+IGJ1eU5vdygpLA0KICAgICAgICAgICAgW3Auc2VuZFRvVHJhbnNmZXJMaXN0QnV0dG9uS2V5XTogKCkgPT4gbW91c2VDbGljaygkKCIudXQtYnV0dG9uLWdyb3VwID4gYnV0dG9uOmNvbnRhaW5zKCciICsgbG9jLmxvY2FsaXplKCdpbmZvcGFuZWwubGFiZWwuc2VuZFRyYWRlUGlsZScpICsgIicpIikpLA0KICAgICAgICAgICAgW3Auc2VuZFRvQ2x1YkJ1dHRvbktleV06ICgpID0+IG1vdXNlQ2xpY2soJCgiLnV0LWJ1dHRvbi1ncm91cCA+IGJ1dHRvbjpjb250YWlucygnIiArIGxvYy5sb2NhbGl6ZSgnaW5mb3BhbmVsLmxhYmVsLnN0b3JlSW5DbHViJykgKyAiJykiKSksDQogICAgICAgIH07DQoNCiAgICBkb2N1bWVudC5ib2R5Lm9ua2V5ZG93biA9IGUgPT4gew0KICAgICAgICBpZiAoZS5rZXlDb2RlID09IHAuZW5hYmxlRGlzYWJsZVBhbGVzbmlwZUtleSkgew0KICAgICAgICAgICAgZW5hYmxlZCA9ICFlbmFibGVkOw0KICAgICAgICAgICAgaWYgKGVuYWJsZWQpIHsNCiAgICAgICAgICAgICAgICAkKCIjcGFsZXRvb2xzLXN0YXR1cyIpLnJlbW92ZUNsYXNzKCdvZmYnKS5hZGRDbGFzcygnb24nKS50ZXh0KCdPTicpOw0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgZWxzZSB7DQogICAgICAgICAgICAgICAgJCgiI3BhbGV0b29scy1zdGF0dXMiKS5yZW1vdmVDbGFzcygnb24nKS5hZGRDbGFzcygnb2ZmJykudGV4dCgnT0ZGJyk7DQogICAgICAgICAgICB9DQogICAgICAgIH0NCg0KICAgICAgICBpZiAoIWVuYWJsZWQgfHwgIWtleXMuaGFzT3duUHJvcGVydHkoZS5rZXlDb2RlKSkgew0KICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICB9DQoNCiAgICAgICAga2V5c1tlLmtleUNvZGVdKCk7DQogICAgfTsNCg0KICAgIGNvbnN0DQogICAgICAgIGNzcyA9ICIjcGFsZXRvb2xzLXN0YXR1cy5vbiB7IGNvbG9yOiBncmVlbiB9OyAjcGFsZXRvb2xzLXN0YXR1cy5vZmYgeyBjb2xvcjogcmVkIH07IiwNCiAgICAgICAgaGVhZCA9IGRvY3VtZW50LmhlYWQgfHwgZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ2hlYWQnKVswXSwNCiAgICAgICAgc3R5bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzdHlsZScpOw0KDQogICAgaGVhZC5hcHBlbmRDaGlsZChzdHlsZSk7DQogICAgc3R5bGUudHlwZSA9ICd0ZXh0L2Nzcyc7DQogICAgc3R5bGUuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7DQoNCiAgICBsZXQgZG9uYXRlSHRtbCA9ICc8Zm9ybSBpZD0icGFsZXRvb2xzLWRvbmF0ZSIgYWN0aW9uPSJodHRwczovL3d3dy5wYXlwYWwuY29tL2NnaS1iaW4vd2Vic2NyIiBtZXRob2Q9InBvc3QiIHRhcmdldD0iX2JsYW5rIj5cDQogICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iY21kIiB2YWx1ZT0iX2RvbmF0aW9ucyIgLz5cDQogICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iYnVzaW5lc3MiIHZhbHVlPSJaQUpYNkFENlhQTFJOIiAvPlwNCiAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJjdXJyZW5jeV9jb2RlIiB2YWx1ZT0iVVNEIiAvPlwNCiAgICA8YSBzdHlsZT0idGV4dC1kZWNvcmF0aW9uOm5vbmU7Y29sb3I6aW5oZXJpdCIgb25jbGljaz0iamF2YXNjcmlwdDokKFwnI3BhbGV0b29scy1kb25hdGVcJylbMF0uc3VibWl0KCkiIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKSI+UGFsZXRvb2xzIERvbmF0ZTwvYT48L2Zvcm0+PC9hPic7DQoNCiAgICAkKCJuYXYudXQtdGFiLWJhciIpDQogICAgICAgIC5hcHBlbmQoJzxidXR0b24gY2xhc3M9InV0LXRhYi1iYXItaXRlbSIgc3R5bGU9Im9yZGVyOiA3Ij48YSBzdHlsZT0idGV4dC1kZWNvcmF0aW9uOm5vbmU7Y29sb3I6aW5oZXJpdCIgdGFyZ2V0PSJwYWxldG9vbHMiIGhyZWY9Imh0dHA6Ly9lYWxsZWdyZXR0YS5naXRodWIuaW8vcGFsZXRvb2xzLmh0bWwiPlBhbGVzbmlwZSAnICsgdmVyICsgJyA8c3BhbiBpZD0icGFsZXRvb2xzLXN0YXR1cyIgY2xhc3M9Im9uIj5PTjwvc3Bhbj48L2E+PC9idXR0b24+JykNCiAgICAgICAgLmFwcGVuZCgnPGJ1dHRvbiBjbGFzcz0idXQtdGFiLWJhci1pdGVtIiBzdHlsZT0ib3JkZXI6IDciPicgKyBkb25hdGVIdG1sICsgJzwvYnV0dG9uPicpOw0KDQogICAgd2luZG93Ll9fcGFsZXNuaXBlID0gdHJ1ZTsNCn0pKCk7DQo=", };