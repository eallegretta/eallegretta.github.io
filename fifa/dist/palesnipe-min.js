window.paletools = window.paletools || {};
window.paletools['palesnipe-min-undefined'] = "!function(e){let t=e=$.extend({back:"Digit1",enableDisable:"Comma",lists:{up:"ArrowUp",down:"ArrowDown",prev:"ArrowLeft",next:"ArrowRight"},search:{resetBid:"Backquote",decMinBid:"ArrowLeft",incMinBid:"ArrowRight",decMaxBid:"End",incMaxBid:"Home",decMinBuy:"Delete",incMinBuy:"PageDown",decMaxBuy:"ArrowDown",incMaxBuy:"ArrowUp",search:"Digit2",botModeMinBid:"BracketRight",botModeMinBuy:"BracketLeft",enableBotMode:!1},results:{bid:"Digit4",buy:"Digit3",transfer:"KeyR",club:"KeyC",pressEnter:!0,autoBuy:!1,preventBack:!1,sell:"KeyQ",decBid:"Delete",incBid:"PageDown"}},e||{}),i=!0,n=document.createElement("style"),r=document.createElement("iframe");r.style.display="none",document.body.appendChild(r),window.console=r.contentWindow.console,window.MAX_NEW_ITEMS=Number.MAX_VALUE;let a="";const s=()=>getAppMain().getRootViewController().getPresentedViewController().getCurrentViewController().getCurrentController();$("#throw").click(function(){throw new Error("debug error")});const o=UTMarketSearchFiltersView.prototype._generate;UTMarketSearchFiltersView.prototype._generate=function(){function e(e){const t=document.createElement("div");t.classList.add("inline-list-select"),t.classList.add("ut-player-search-control");const i=document.createElement("div");i.classList.add("inline-container"),t.appendChild(i);const n=document.createElement("div");return i.appendChild(n),n.classList.add("ut-player-search-control--input-container"),n.appendChild(e),t}if(o.call(this),!this._generatePalesnipeCalled){const t=document.createElement("div");t.classList.add("ut-item-search-view"),this._playerId=new UTTextInputControl;const i=e(this._playerId.getRootElement());this._playerRating=new UTTextInputControl;const n=e(this._playerRating.getRootElement());let r=document.createElement("div");this._filterName=new UTTextInputControl,this._filterName.init(),this._saveFilterButton=new UTStandardButtonControl,this._saveFilterButton.init(),this._saveFilterButton.setText("Save"),this._saveFilterButton.addTarget(this,this.saveFilter,EventType.TAP),this._deleteFilterButton=new UTStandardButtonControl,this._deleteFilterButton.init(),this._deleteFilterButton.setText("Delete"),this._deleteFilterButton.addTarget(this,this.deleteFilter,EventType.TAP),this._savedFilters=new UTDropDownControl,this._savedFilters.init(),this._savedFilters.addTarget(this,this.onSavedFiltersChange,EventType.CHANGE),$(r).append(this._filterName.getRootElement()).append(this._saveFilterButton.getRootElement()).append(this._deleteFilterButton.getRootElement()).append(this._savedFilters.getRootElement()),$(t).append(i).append(n),$(t).insertBefore($(".ut-item-search-view",this.__root)),this._playerId.init(),this._playerId.setPlaceholder("Player ID"),this._playerId.setMaxLength(25),this._playerId.addTarget(this,this.handlePlayerIdChange,EventType.CHANGE),this._playerRating.init(),this._playerRating.setPlaceholder("Player Rating"),this._playerRating.setMaxLength(3),this._playerRating.addTarget(this,this.handlePlayerRatingChange,EventType.CHANGE),this.loadSavedFilters(),this._generatePalesnipeCalled=!0}},UTMarketSearchFiltersView.prototype.getStoredFilters=function(){const e=localStorage.getItem("paletools:searchFilters");return e&&JSON.parse(atob(e))||{}},UTMarketSearchFiltersView.prototype.saveFilters=function(e){localStorage.setItem("paletools:searchFilters",btoa(JSON.stringify(e)))},UTMarketSearchFiltersView.prototype.loadSavedFilters=function(){const e=this.getStoredFilters();let t=[{label:"",value:""}];for(let i of Object.keys(e).sort())t.push({label:e[i].name,value:i});this._savedFilters.setOptions(t)},UTMarketSearchFiltersView.prototype.saveFilter=function(){const e=s();if(e instanceof UTMarketSearchFiltersViewController){const t=e._viewmodel.searchCriteria,i=this._filterName.getValue(),n=i.replace(/[^a-z0-9]/gi,"_").toLowerCase(),r=this.getStoredFilters();t.rating=this._playerRating.getValue(),r[n]={name:i,criteria:t},this.saveFilters(r),this.loadSavedFilters()}},UTMarketSearchFiltersView.prototype.deleteFilter=function(){if(s()instanceof UTMarketSearchFiltersViewController){const e=this._savedFilters.getValue();if(!e)return;const t=this.getStoredFilters();delete t[e],this.saveFilters(t),this.loadSavedFilters()}},UTMarketSearchFiltersView.prototype.loadFilter=function(e){const t=s();if(t instanceof UTMarketSearchFiltersViewController){this._playerRating.setValue(e.criteria.rating);for(let i of Object.keys(e.criteria))t._viewmodel.searchCriteria[i]=e.criteria[i],this.setFilters(t._viewmodel)}};const l=UTMarketSearchFiltersView.prototype.destroyGeneratedElements;UTMarketSearchFiltersView.prototype.destroyGeneratedElements=function(){l.call(this),this._playerId.destroy(),this._playerRating.destroy(),this._filterName.destroy(),this._saveFilterButton.destroy(),this._deleteFilterButton.destroy(),this._savedFilters.destroy()},UTMarketSearchFiltersView.prototype.handlePlayerIdChange=function(e,t,i){const n=s();n instanceof UTMarketSearchFiltersViewController&&(n._viewmodel.searchCriteria.defId=[i.value])},UTMarketSearchFiltersView.prototype.handlePlayerRatingChange=function(e,t,i){a=i.value},UTMarketSearchFiltersView.prototype.onSavedFiltersChange=function(e,t,i){const n=this.getStoredFilters();if(n[i.value])this.loadFilter(n[i.value]);else{const e=s();e instanceof UTMarketSearchFiltersViewController&&e._eResetSelected()}};const c=UTMarketSearchFiltersViewController.prototype._eResetSelected;UTMarketSearchFiltersViewController.prototype._eResetSelected=function(){this.getView()._playerId.clear(),this.getView()._playerRating.clear(),c.call(this)},UTPaginatedItemListView.prototype.setItems=function(e,t){var i=this;return this.removeListRows(),e.forEach(function(e){if(function(e){let t=a;return!t||("+"===t.charAt(0)?(t=parseInt(t.substr(1)),e.rating>=t):"-"===t.charAt(0)?(t=parseInt(t.substr(1)),e.rating<=t):(t=parseInt(t),e.rating==t))}(e)){var n=new UTItemTableCellView;n.setData(e,void 0,void 0,t),i.listRows.push(n)}}),this.listRows},UTItemTableCellView.prototype._oldRender=UTItemTableCellView.prototype.render,UTItemTableCellView.prototype.render=function(e){this._oldRender(),this.data.isPlayer()&&$(".ut-item-view--main",this.__entityContainer).append(`<span class="player-definition-id">${this.data.definitionId}</span>`)},UTItemDomainRepository.prototype.isPileFull=function(e){var t=0,i=this.pileSizes.get(e);switch(e){case ItemPile.PURCHASED:t=this.unassigned.length;break;case ItemPile.TRANSFER:t=this.transfer.length;break;case ItemPile.INBOX:return 0;case ItemPile.CLUB:return!1}return(i||0)<=t};const d=console.log,h=window.services.Localization,u=(e,t)=>{if(0==e.length)return!1;const i=document.createEvent("MouseEvents");return i.initEvent(t),e[0].dispatchEvent(i),!0},p=(e,t,i)=>{if(!t)return(e=>u(e,"mousedown"))(e)&&(e=>u(e,"mouseup"))(e);setTimeout(()=>{i(p(e))},t)},g=e=>{p(B())&&t.results.pressEnter&&y(e)},y=e=>{if(!p(T()))return e&&setTimeout(e(!1),0),void setTimeout(y,10);e&&e(!0),C()},v=()=>{d("back"),p(M())||setTimeout(v,1)},f=()=>{p(F()),t.results.autoBuy&&(0==_()?(d("researching"),setTimeout(f,10)):(d($(".ut-no-results-view").length),$(".ut-no-results-view").length>0?(d("no results"),v()):(d("buying"),g(e=>{e&&p(m())}))))},m=()=>$(`.ut-button-group > button:contains('${h.localize("infopanel.label.sendTradePile")}')`),b=()=>$(`.ut-button-group > button:contains('${h.localize("infopanel.label.storeInClub")}')`),w=()=>$(`.ut-button-group > button:contains('${h.localize("infopanel.label.discard")}')`),B=()=>$(".buyButton"),M=()=>$(".ut-navigation-button-control"),T=()=>$(".ea-dialog-view .ut-button-group button:eq(0)"),F=()=>$(".button-container .btn-standard.call-to-action"),_=()=>$(".SearchResults").length,C=()=>{if(!i)return;var e=m();if(0==e.length)return void setTimeout(C,50);let n=(e,i)=>{if(!e)return;let n=` [ ${t.results[i]} ]`,r=e.html();r&&-1==r.indexOf(n)&&e.html(e.html()+n)};n(e,"transfer"),n(b(),"club"),n(w(),"sell")};function S(){i?(i=!1,document.body.removeChild(n),services.Notification.queue(["Palesnipe Disabled",UINotificationType.NEUTRAL])):U()}function U(){i=!0,document.body.appendChild(n),services.Notification.queue(["Palesnipe Enabled",UINotificationType.POSITIVE])}document.body.addEventListener("keydown",e=>{if(e.code==t.enableDisable&&S(),!i)return;let n=(()=>{let e={};if(e[t.back]=(()=>v()),$(".ut-market-search-filters-view").length>0)e[t.search.decMinBid]=(()=>p($(".decrement-value"))),e[t.search.incMinBid]=(()=>p($(".increment-value"))),e[t.search.decMaxBid]=(()=>p($(".decrement-value:eq(1)"))),e[t.search.incMaxBid]=(()=>p($(".increment-value:eq(1)"))),e[t.search.decMinBuy]=(()=>p($(".decrement-value:eq(2)"))),e[t.search.incMinBuy]=(()=>p($(".increment-value:eq(2)"))),e[t.search.decMaxBuy]=(()=>p($(".decrement-value:eq(3)"))),e[t.search.incMaxBuy]=(()=>p($(".increment-value:eq(3)"))),e[t.search.search]=(()=>f()),e[t.search.resetBid]=(()=>p($(".search-price-header > button:first"))),e[t.search.botModeMinBid]=(()=>{e.search.enableBotMode&&e[t.search.incMinBid]()&&f()}),e[t.search.botModeMinBuy]=(()=>{e.search.enableBotMode&&e[t.search.incMinBuy]()&&f()});else{let i=$(".listFUTItem"),n=i.length>0,r=i.parents(".paginated, .ut-watch-list-view, .ut-transfer-list-view");0==r.length&&(r=i.parent()),n&&$(".DetailPanel > .bidOptions").length>0&&(e[t.results.bid]=(()=>p($(".bidButton"))),e[t.results.buy]=(()=>g()),e[t.results.decBid]=(()=>p($(".bidOptions .decrement-value"))),e[t.results.incBid]=(()=>p($(".bidOptions .increment-value"))),e[t.search.botModeMinBid]=(()=>!!e.search.enableBotMode&&g()),e[t.search.botModeMinBuy]=(()=>!!e.search.enableBotMode&&g())),n&&$(".DetailPanel > .ut-button-group").length>0&&(e[t.results.transfer]=(()=>p(m())),e[t.results.club]=(()=>p(b())),e[t.results.sell]=(()=>p(w()))),n?(e[t.lists.up]=(()=>{let e=r,t=$(".listFUTItem.selected",e).prev();0===t.length&&(t=$(".listFUTItem:last-child",e)),p(t),e.css("position","relative"),e.scrollTop(e.scrollTop()+t.position().top-t.height())}),e[t.lists.down]=(()=>{let e=r,t=$(".listFUTItem.selected",e).next();0===t.length&&(t=$(".listFUTItem:first-child",e)),p(t),e.css("position","relative"),e.scrollTop(e.scrollTop()+t.position().top)})):(e[t.search.botModeMinBid]=(()=>!!e.search.enableBotMode&&v()),e[t.search.botModeMinBuy]=(()=>!!e.search.enableBotMode&&v())),$(".pagingContainer").length>0&&(e[t.lists.prev]=(()=>p($(".pagingContainer .prev:visible"))),e[t.lists.next]=(()=>p($(".pagingContainer .next:visible"))))}return e})()[e.code];n&&n()}),(()=>{let e=(e,i,n,r)=>`${e} .${r?"in":"de"}crement-value:after { font-size:10px; display:block; margin-top:-30px; content: '[ ${t[i][n]} ]' }`,i=(t,i,n)=>e(`.search-prices .price-filter:nth-child(${t})`,"search",i,n),r=(e,t,n)=>`${i(e,t)}${i(e,n,!0)}`,a=`\n            ${r(2,"decMinBid","incMinBid")}\n            ${r(3,"decMaxBid","incMaxBid")}\n            ${r(5,"decMinBuy","incMinBuy")}\n            ${r(6,"decMaxBuy","incMaxBuy")}\n            ${e(".DetailPanel > .bidOptions","results","decBid",!1)}\n            ${e(".DetailPanel > .bidOptions","results","incBid",!0)}\n            .ut-market-search-filters-view .call-to-action:after { content: '[ ${t.search.search}]'}\n            .ut-market-search-filters-view .search-price-header:first-child > button:after { content: '[ ${t.search.resetBid}]';  font-size: 10px; display: block  }\n            .ut-navigation-button-control:after { font-size:10px; float:right; margin-right:12px; content: '[ ${t.back} ]' }\n            .pagingContainer .prev:after { font-size: 10px; display:block; content: '[ ${t.lists.prev} ]' }\n            .pagingContainer .next:after { font-size: 10px; display:block; content: '[ ${t.lists.next} ]' }\n            .bidButton:after { content: ' [ ${t.results.bid} ]' }\n            .buyButton:before { float:right; content: ' [ ${t.results.buy} ]' }\n            .player-definition-id { position: absolute; bottom: 0; }\n            `;n.innerText=a})(),U()}();"